version: '3'
services:
  zookeeper1:
    image: wurstmeister/zookeeper
    hostname: zookeeper1
    container_name: zookeeper1
    networks:
      - message
    ports:
      - "2181:2181"
    volumes:
      - ./data/zookeeper/data:/data
      - ./data/zookeeper/datalog:/datalog

  # Port 9092 for containers, Port 29092 for docker host
  kafka1:
    image: wurstmeister/kafka
    hostname: kafka1
    container_name: kafka1
    networks:
      - message
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181
      #KAFKA_LISTENERS: LISTENER_WITHIN_DOCKER://0.0.0.0:9092,LISTENER_DOCKER_HOST://0.0.0.0:29092
      #KAFKA_ADVERTISED_LISTENERS: LISTENER_WITHIN_DOCKER://kafka1:9092,LISTENER_DOCKER_HOST://localhost:29092
      #KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_WITHIN_DOCKER:PLAINTEXT,LISTENER_DOCKER_HOST:PLAINTEXT
      KAFKA_LISTENERS: LISTENER_WITHIN_DOCKER://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_WITHIN_DOCKER://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_WITHIN_DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_WITHIN_DOCKER
      KAFKA_CREATE_TOPICS: "test:1:1,request:1:1,reply:1:1,command:1:1,data:1:1"
    volumes:
      - ./data/kafka1/data:/var/lib/kafka/data
      #- /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper1

  mysql:
    image: mysql
    hostname: mysql
    container_name: mysql
    networks:
      - database
    ports:
      - "3306:3306"
    #volumes:
      #- ./data/mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mdo_sync
      MYSQL_USER: mdo_sync
      MYSQL_PASSWORD: mdo_sync

  # As as busybox
  ubuntu:
    image: ubuntu
    hostname: ubuntu
    container_name: ubuntu
    networks:
      - message
      - database
    volumes:
      - ./data:/data
    command: tail -f /dev/null

networks:
  message:
    name: message
    driver: bridge
  database:
    name: database
    driver: bridge
